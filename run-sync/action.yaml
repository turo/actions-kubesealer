name: "kubesealer: sync"
description: GitHub Action that uses kubesealer to sync sealed secrets from secret templates
inputs:
  op-token:
    required: true
    description: Token used to communicate with 1Password Connect API
  op-credentials-json-base64:
    required: true
    description: Base64 encoded JSON containing credentials for 1Password Connect API
runs:
  using: composite
  steps:
    - name: create kubesealer directory
      working-directory: ${{ runner.temp }}
      shell: bash
      run: mkdir kubesealer

    - name: setup env
      working-directory: ${{ runner.temp }}/kubesealer
      shell: bash
      run: |
        echo "DEBUG=turo-kubesealer:*" > .env
        # shellcheck disable=SC2129
        echo "OP_TOKEN=${{ inputs.op-token }}" >> .env
        echo "OP_SERVER_URL=http://op-connect-api:8080" >> .env

    - name: setup 1password connect credentials
      working-directory: ${{ runner.temp }}/kubesealer
      shell: bash
      run: echo "${{ inputs.op-credentials-json-base64 }}" | base64 -d > 1password-credentials.json

    - name: setup docker-compose.yaml
      working-directory: ${{ runner.temp }}/kubesealer
      shell: bash
      run: cp ${{ github.action_path }}/docker-compose.yaml .

    - name: docker versions
      shell: bash
      run: |
        docker --version
        docker-compose --version

    - name: start 1password connect
      shell: bash
      env:
        COMPOSE_PROJECT_NAME: ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt }}
      working-directory: ${{ runner.temp }}/kubesealer
      run: docker-compose up -d op-connect-api op-connect-sync

    - name: logs
      shell: bash
      env:
        COMPOSE_PROJECT_NAME: ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt }}
      working-directory: ${{ runner.temp }}/kubesealer
      run: docker-compose logs

    - name: kubesealer sync
      shell: bash
      env:
        COMPOSE_PROJECT_NAME: ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt }}
      run: docker-compose -f ${RUNNER_TEMP}/kubesealer/docker-compose.yaml run --rm -v "$(pwd):/src" kubesealer turo-kubesealer sync --recursive --certs /certs /src

    - name: cleanup kubesealer
      if: always()
      shell: bash
      env:
        COMPOSE_PROJECT_NAME: ${{ github.event.repository.name }}-${{ github.run_id }}-${{ github.run_attempt }}
      working-directory: ${{ runner.temp }}/kubesealer
      run: |
        echo "List running docker containers"
        docker ps -a
        if [ -f docker-compose.yaml ]; then
          echo "Terminate docker-compose"
          docker-compose down --remove-orphans
        fi
        echo "List running docker containers"
        docker ps -a

    - name: cleanup kubesealer directory
      if: always()
      working-directory: ${{ runner.temp }}
      shell: bash
      run: rm -rf kubesealer
